// This file is generated by KDAB's kdwsdl2cpp from holidays.wsdl.
// All changes you do to this file will be lost.
#ifndef WSDL_HOLIDAYS_H
#define WSDL_HOLIDAYS_H

#include <QDateTime>
#include <QSharedData>
#include <QObject>
#include <QString>

class KDSoapClientInterface;
class KDSoapMessage;
class KDSoapPendingCallWatcher;
class KDSoapValueList;

class TNS__GetMothersDayResponse
{
public:
    void setGetMothersDayResult( const QDateTime& getMothersDayResult );
    QDateTime getMothersDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetMothersDayResponse();
    ~TNS__GetMothersDayResponse();

public:
    TNS__GetMothersDayResponse( const TNS__GetMothersDayResponse& );
    TNS__GetMothersDayResponse &operator=( const TNS__GetMothersDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetMothersDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetMothersDay();
    ~TNS__GetMothersDay();

public:
    TNS__GetMothersDay( const TNS__GetMothersDay& );
    TNS__GetMothersDay &operator=( const TNS__GetMothersDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetMemorialDayResponse
{
public:
    void setGetMemorialDayResult( const QDateTime& getMemorialDayResult );
    QDateTime getMemorialDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetMemorialDayResponse();
    ~TNS__GetMemorialDayResponse();

public:
    TNS__GetMemorialDayResponse( const TNS__GetMemorialDayResponse& );
    TNS__GetMemorialDayResponse &operator=( const TNS__GetMemorialDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetFlagDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetFlagDay();
    ~TNS__GetFlagDay();

public:
    TNS__GetFlagDay( const TNS__GetFlagDay& );
    TNS__GetFlagDay &operator=( const TNS__GetFlagDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetColumbusDayResponse
{
public:
    void setGetColumbusDayResult( const QDateTime& getColumbusDayResult );
    QDateTime getColumbusDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetColumbusDayResponse();
    ~TNS__GetColumbusDayResponse();

public:
    TNS__GetColumbusDayResponse( const TNS__GetColumbusDayResponse& );
    TNS__GetColumbusDayResponse &operator=( const TNS__GetColumbusDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetVeteransDayResponse
{
public:
    void setGetVeteransDayResult( const QDateTime& getVeteransDayResult );
    QDateTime getVeteransDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetVeteransDayResponse();
    ~TNS__GetVeteransDayResponse();

public:
    TNS__GetVeteransDayResponse( const TNS__GetVeteransDayResponse& );
    TNS__GetVeteransDayResponse &operator=( const TNS__GetVeteransDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetChristmasDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetChristmasDay();
    ~TNS__GetChristmasDay();

public:
    TNS__GetChristmasDay( const TNS__GetChristmasDay& );
    TNS__GetChristmasDay &operator=( const TNS__GetChristmasDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetHalloweenDayResponse
{
public:
    void setGetHalloweenDayResult( const QDateTime& getHalloweenDayResult );
    QDateTime getHalloweenDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetHalloweenDayResponse();
    ~TNS__GetHalloweenDayResponse();

public:
    TNS__GetHalloweenDayResponse( const TNS__GetHalloweenDayResponse& );
    TNS__GetHalloweenDayResponse &operator=( const TNS__GetHalloweenDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetVeteransDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetVeteransDay();
    ~TNS__GetVeteransDay();

public:
    TNS__GetVeteransDay( const TNS__GetVeteransDay& );
    TNS__GetVeteransDay &operator=( const TNS__GetVeteransDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetThanksgivingDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetThanksgivingDay();
    ~TNS__GetThanksgivingDay();

public:
    TNS__GetThanksgivingDay( const TNS__GetThanksgivingDay& );
    TNS__GetThanksgivingDay &operator=( const TNS__GetThanksgivingDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetLaborDayResponse
{
public:
    void setGetLaborDayResult( const QDateTime& getLaborDayResult );
    QDateTime getLaborDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetLaborDayResponse();
    ~TNS__GetLaborDayResponse();

public:
    TNS__GetLaborDayResponse( const TNS__GetLaborDayResponse& );
    TNS__GetLaborDayResponse &operator=( const TNS__GetLaborDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetCincoDeMayoResponse
{
public:
    void setGetCincoDeMayoResult( const QDateTime& getCincoDeMayoResult );
    QDateTime getCincoDeMayoResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetCincoDeMayoResponse();
    ~TNS__GetCincoDeMayoResponse();

public:
    TNS__GetCincoDeMayoResponse( const TNS__GetCincoDeMayoResponse& );
    TNS__GetCincoDeMayoResponse &operator=( const TNS__GetCincoDeMayoResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetGeorgeWashingtonsBirthday
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetGeorgeWashingtonsBirthday();
    ~TNS__GetGeorgeWashingtonsBirthday();

public:
    TNS__GetGeorgeWashingtonsBirthday( const TNS__GetGeorgeWashingtonsBirthday& );
    TNS__GetGeorgeWashingtonsBirthday &operator=( const TNS__GetGeorgeWashingtonsBirthday& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetSaintPatricksDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetSaintPatricksDay();
    ~TNS__GetSaintPatricksDay();

public:
    TNS__GetSaintPatricksDay( const TNS__GetSaintPatricksDay& );
    TNS__GetSaintPatricksDay &operator=( const TNS__GetSaintPatricksDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetAbrahamLincolnsBirthdayResponse
{
public:
    void setGetAbrahamLincolnsBirthdayResult( const QDateTime& getAbrahamLincolnsBirthdayResult );
    QDateTime getAbrahamLincolnsBirthdayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetAbrahamLincolnsBirthdayResponse();
    ~TNS__GetAbrahamLincolnsBirthdayResponse();

public:
    TNS__GetAbrahamLincolnsBirthdayResponse( const TNS__GetAbrahamLincolnsBirthdayResponse& );
    TNS__GetAbrahamLincolnsBirthdayResponse &operator=( const TNS__GetAbrahamLincolnsBirthdayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetNewYearsEve
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetNewYearsEve();
    ~TNS__GetNewYearsEve();

public:
    TNS__GetNewYearsEve( const TNS__GetNewYearsEve& );
    TNS__GetNewYearsEve &operator=( const TNS__GetNewYearsEve& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetValentinesDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetValentinesDay();
    ~TNS__GetValentinesDay();

public:
    TNS__GetValentinesDay( const TNS__GetValentinesDay& );
    TNS__GetValentinesDay &operator=( const TNS__GetValentinesDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetHalloweenDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetHalloweenDay();
    ~TNS__GetHalloweenDay();

public:
    TNS__GetHalloweenDay( const TNS__GetHalloweenDay& );
    TNS__GetHalloweenDay &operator=( const TNS__GetHalloweenDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetNewYearResponse
{
public:
    void setGetNewYearResult( const QDateTime& getNewYearResult );
    QDateTime getNewYearResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetNewYearResponse();
    ~TNS__GetNewYearResponse();

public:
    TNS__GetNewYearResponse( const TNS__GetNewYearResponse& );
    TNS__GetNewYearResponse &operator=( const TNS__GetNewYearResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetMemorialDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetMemorialDay();
    ~TNS__GetMemorialDay();

public:
    TNS__GetMemorialDay( const TNS__GetMemorialDay& );
    TNS__GetMemorialDay &operator=( const TNS__GetMemorialDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetEaster
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetEaster();
    ~TNS__GetEaster();

public:
    TNS__GetEaster( const TNS__GetEaster& );
    TNS__GetEaster &operator=( const TNS__GetEaster& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetEasterResponse
{
public:
    void setGetEasterResult( const QDateTime& getEasterResult );
    QDateTime getEasterResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetEasterResponse();
    ~TNS__GetEasterResponse();

public:
    TNS__GetEasterResponse( const TNS__GetEasterResponse& );
    TNS__GetEasterResponse &operator=( const TNS__GetEasterResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetThanksgivingDayResponse
{
public:
    void setGetThanksgivingDayResult( const QDateTime& getThanksgivingDayResult );
    QDateTime getThanksgivingDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetThanksgivingDayResponse();
    ~TNS__GetThanksgivingDayResponse();

public:
    TNS__GetThanksgivingDayResponse( const TNS__GetThanksgivingDayResponse& );
    TNS__GetThanksgivingDayResponse &operator=( const TNS__GetThanksgivingDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetFathersDayResponse
{
public:
    void setGetFathersDayResult( const QDateTime& getFathersDayResult );
    QDateTime getFathersDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetFathersDayResponse();
    ~TNS__GetFathersDayResponse();

public:
    TNS__GetFathersDayResponse( const TNS__GetFathersDayResponse& );
    TNS__GetFathersDayResponse &operator=( const TNS__GetFathersDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetNewYearsEveResponse
{
public:
    void setGetNewYearsEveResult( const QDateTime& getNewYearsEveResult );
    QDateTime getNewYearsEveResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetNewYearsEveResponse();
    ~TNS__GetNewYearsEveResponse();

public:
    TNS__GetNewYearsEveResponse( const TNS__GetNewYearsEveResponse& );
    TNS__GetNewYearsEveResponse &operator=( const TNS__GetNewYearsEveResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetIndependenceDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetIndependenceDay();
    ~TNS__GetIndependenceDay();

public:
    TNS__GetIndependenceDay( const TNS__GetIndependenceDay& );
    TNS__GetIndependenceDay &operator=( const TNS__GetIndependenceDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetAbrahamLincolnsBirthday
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetAbrahamLincolnsBirthday();
    ~TNS__GetAbrahamLincolnsBirthday();

public:
    TNS__GetAbrahamLincolnsBirthday( const TNS__GetAbrahamLincolnsBirthday& );
    TNS__GetAbrahamLincolnsBirthday &operator=( const TNS__GetAbrahamLincolnsBirthday& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetMartinLutherKingDayResponse
{
public:
    void setGetMartinLutherKingDayResult( const QDateTime& getMartinLutherKingDayResult );
    QDateTime getMartinLutherKingDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetMartinLutherKingDayResponse();
    ~TNS__GetMartinLutherKingDayResponse();

public:
    TNS__GetMartinLutherKingDayResponse( const TNS__GetMartinLutherKingDayResponse& );
    TNS__GetMartinLutherKingDayResponse &operator=( const TNS__GetMartinLutherKingDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetValentinesDayResponse
{
public:
    void setGetValentinesDayResult( const QDateTime& getValentinesDayResult );
    QDateTime getValentinesDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetValentinesDayResponse();
    ~TNS__GetValentinesDayResponse();

public:
    TNS__GetValentinesDayResponse( const TNS__GetValentinesDayResponse& );
    TNS__GetValentinesDayResponse &operator=( const TNS__GetValentinesDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetIndependenceDayResponse
{
public:
    void setGetIndependenceDayResult( const QDateTime& getIndependenceDayResult );
    QDateTime getIndependenceDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetIndependenceDayResponse();
    ~TNS__GetIndependenceDayResponse();

public:
    TNS__GetIndependenceDayResponse( const TNS__GetIndependenceDayResponse& );
    TNS__GetIndependenceDayResponse &operator=( const TNS__GetIndependenceDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetFlagDayResponse
{
public:
    void setGetFlagDayResult( const QDateTime& getFlagDayResult );
    QDateTime getFlagDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetFlagDayResponse();
    ~TNS__GetFlagDayResponse();

public:
    TNS__GetFlagDayResponse( const TNS__GetFlagDayResponse& );
    TNS__GetFlagDayResponse &operator=( const TNS__GetFlagDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetAprilFoolsDayResponse
{
public:
    void setGetAprilFoolsDayResult( const QDateTime& getAprilFoolsDayResult );
    QDateTime getAprilFoolsDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetAprilFoolsDayResponse();
    ~TNS__GetAprilFoolsDayResponse();

public:
    TNS__GetAprilFoolsDayResponse( const TNS__GetAprilFoolsDayResponse& );
    TNS__GetAprilFoolsDayResponse &operator=( const TNS__GetAprilFoolsDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetGeorgeWashingtonsBirthdayResponse
{
public:
    void setGetGeorgeWashingtonsBirthdayResult( const QDateTime& getGeorgeWashingtonsBirthdayResult );
    QDateTime getGeorgeWashingtonsBirthdayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetGeorgeWashingtonsBirthdayResponse();
    ~TNS__GetGeorgeWashingtonsBirthdayResponse();

public:
    TNS__GetGeorgeWashingtonsBirthdayResponse( const TNS__GetGeorgeWashingtonsBirthdayResponse& );
    TNS__GetGeorgeWashingtonsBirthdayResponse &operator=( const TNS__GetGeorgeWashingtonsBirthdayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetAprilFoolsDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetAprilFoolsDay();
    ~TNS__GetAprilFoolsDay();

public:
    TNS__GetAprilFoolsDay( const TNS__GetAprilFoolsDay& );
    TNS__GetAprilFoolsDay &operator=( const TNS__GetAprilFoolsDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetGoodFridayResponse
{
public:
    void setGetGoodFridayResult( const QDateTime& getGoodFridayResult );
    QDateTime getGoodFridayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetGoodFridayResponse();
    ~TNS__GetGoodFridayResponse();

public:
    TNS__GetGoodFridayResponse( const TNS__GetGoodFridayResponse& );
    TNS__GetGoodFridayResponse &operator=( const TNS__GetGoodFridayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetBlackFriday
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetBlackFriday();
    ~TNS__GetBlackFriday();

public:
    TNS__GetBlackFriday( const TNS__GetBlackFriday& );
    TNS__GetBlackFriday &operator=( const TNS__GetBlackFriday& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetColumbusDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetColumbusDay();
    ~TNS__GetColumbusDay();

public:
    TNS__GetColumbusDay( const TNS__GetColumbusDay& );
    TNS__GetColumbusDay &operator=( const TNS__GetColumbusDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetFathersDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetFathersDay();
    ~TNS__GetFathersDay();

public:
    TNS__GetFathersDay( const TNS__GetFathersDay& );
    TNS__GetFathersDay &operator=( const TNS__GetFathersDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetPresidentsDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetPresidentsDay();
    ~TNS__GetPresidentsDay();

public:
    TNS__GetPresidentsDay( const TNS__GetPresidentsDay& );
    TNS__GetPresidentsDay &operator=( const TNS__GetPresidentsDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetSaintPatricksDayResponse
{
public:
    void setGetSaintPatricksDayResult( const QDateTime& getSaintPatricksDayResult );
    QDateTime getSaintPatricksDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetSaintPatricksDayResponse();
    ~TNS__GetSaintPatricksDayResponse();

public:
    TNS__GetSaintPatricksDayResponse( const TNS__GetSaintPatricksDayResponse& );
    TNS__GetSaintPatricksDayResponse &operator=( const TNS__GetSaintPatricksDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetChristmasDayResponse
{
public:
    void setGetChristmasDayResult( const QDateTime& getChristmasDayResult );
    QDateTime getChristmasDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetChristmasDayResponse();
    ~TNS__GetChristmasDayResponse();

public:
    TNS__GetChristmasDayResponse( const TNS__GetChristmasDayResponse& );
    TNS__GetChristmasDayResponse &operator=( const TNS__GetChristmasDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetCincoDeMayo
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetCincoDeMayo();
    ~TNS__GetCincoDeMayo();

public:
    TNS__GetCincoDeMayo( const TNS__GetCincoDeMayo& );
    TNS__GetCincoDeMayo &operator=( const TNS__GetCincoDeMayo& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetGoodFriday
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetGoodFriday();
    ~TNS__GetGoodFriday();

public:
    TNS__GetGoodFriday( const TNS__GetGoodFriday& );
    TNS__GetGoodFriday &operator=( const TNS__GetGoodFriday& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetNewYear
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetNewYear();
    ~TNS__GetNewYear();

public:
    TNS__GetNewYear( const TNS__GetNewYear& );
    TNS__GetNewYear &operator=( const TNS__GetNewYear& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetMartinLutherKingDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetMartinLutherKingDay();
    ~TNS__GetMartinLutherKingDay();

public:
    TNS__GetMartinLutherKingDay( const TNS__GetMartinLutherKingDay& );
    TNS__GetMartinLutherKingDay &operator=( const TNS__GetMartinLutherKingDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetBlackFridayResponse
{
public:
    void setGetBlackFridayResult( const QDateTime& getBlackFridayResult );
    QDateTime getBlackFridayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetBlackFridayResponse();
    ~TNS__GetBlackFridayResponse();

public:
    TNS__GetBlackFridayResponse( const TNS__GetBlackFridayResponse& );
    TNS__GetBlackFridayResponse &operator=( const TNS__GetBlackFridayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetPresidentsDayResponse
{
public:
    void setGetPresidentsDayResult( const QDateTime& getPresidentsDayResult );
    QDateTime getPresidentsDayResult() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetPresidentsDayResponse();
    ~TNS__GetPresidentsDayResponse();

public:
    TNS__GetPresidentsDayResponse( const TNS__GetPresidentsDayResponse& );
    TNS__GetPresidentsDayResponse &operator=( const TNS__GetPresidentsDayResponse& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

class TNS__GetLaborDay
{
public:
    void setYear( int year );
    int year() const;
    QVariant serialize() const;
    void deserialize( const KDSoapValueList& args );
    TNS__GetLaborDay();
    ~TNS__GetLaborDay();

public:
    TNS__GetLaborDay( const TNS__GetLaborDay& );
    TNS__GetLaborDay &operator=( const TNS__GetLaborDay& );

private:
    class PrivateDPtr;
    QSharedDataPointer<PrivateDPtr> d_ptr;
};

/**
    Web service that calculates specific national holidays for the US.
 */
class USHolidayDates : public QObject
{
    Q_OBJECT

public:
    USHolidayDates( QObject* parent = 0 );
    ~USHolidayDates();
    /**
        Overwrite the end point defined in the .wsdl file, with another
        http/https URL.
     */
    void setEndPoint( const QString& endPoint );
    /**
        Return the error from the last blocking call.
        Empty if no error.
     */
    QString lastError() const;
    /**
        Blocking call to GetNewYear.
        Not recommended in a GUI thread.
     */
    TNS__GetNewYearResponse getNewYear( const TNS__GetNewYear& parameters );
    /**
        Asynchronous call to GetNewYear.
        Remember to connect to getNewYearDone and getNewYearError.
     */
    void asyncGetNewYear( const TNS__GetNewYear& parameters );
    /**
        Blocking call to GetMartinLutherKingDay.
        Not recommended in a GUI thread.
     */
    TNS__GetMartinLutherKingDayResponse getMartinLutherKingDay( const TNS__GetMartinLutherKingDay& parameters );
    /**
        Asynchronous call to GetMartinLutherKingDay.
        Remember to connect to getMartinLutherKingDayDone and
        getMartinLutherKingDayError.
     */
    void asyncGetMartinLutherKingDay( const TNS__GetMartinLutherKingDay& parameters );
    /**
        Blocking call to GetPresidentsDay.
        Not recommended in a GUI thread.
     */
    TNS__GetPresidentsDayResponse getPresidentsDay( const TNS__GetPresidentsDay& parameters );
    /**
        Asynchronous call to GetPresidentsDay.
        Remember to connect to getPresidentsDayDone and getPresidentsDayError.
     */
    void asyncGetPresidentsDay( const TNS__GetPresidentsDay& parameters );
    /**
        Blocking call to GetAbrahamLincolnsBirthday.
        Not recommended in a GUI thread.
     */
    TNS__GetAbrahamLincolnsBirthdayResponse getAbrahamLincolnsBirthday( const TNS__GetAbrahamLincolnsBirthday& parameters );
    /**
        Asynchronous call to GetAbrahamLincolnsBirthday.
        Remember to connect to getAbrahamLincolnsBirthdayDone and
        getAbrahamLincolnsBirthdayError.
     */
    void asyncGetAbrahamLincolnsBirthday( const TNS__GetAbrahamLincolnsBirthday& parameters );
    /**
        Blocking call to GetValentinesDay.
        Not recommended in a GUI thread.
     */
    TNS__GetValentinesDayResponse getValentinesDay( const TNS__GetValentinesDay& parameters );
    /**
        Asynchronous call to GetValentinesDay.
        Remember to connect to getValentinesDayDone and getValentinesDayError.
     */
    void asyncGetValentinesDay( const TNS__GetValentinesDay& parameters );
    /**
        Blocking call to GetGeorgeWashingtonsBirthday.
        Not recommended in a GUI thread.
     */
    TNS__GetGeorgeWashingtonsBirthdayResponse getGeorgeWashingtonsBirthday( const TNS__GetGeorgeWashingtonsBirthday& parameters );
    /**
        Asynchronous call to GetGeorgeWashingtonsBirthday.
        Remember to connect to getGeorgeWashingtonsBirthdayDone and
        getGeorgeWashingtonsBirthdayError.
     */
    void asyncGetGeorgeWashingtonsBirthday( const TNS__GetGeorgeWashingtonsBirthday& parameters );
    /**
        Blocking call to GetGoodFriday.
        Not recommended in a GUI thread.
     */
    TNS__GetGoodFridayResponse getGoodFriday( const TNS__GetGoodFriday& parameters );
    /**
        Asynchronous call to GetGoodFriday.
        Remember to connect to getGoodFridayDone and getGoodFridayError.
     */
    void asyncGetGoodFriday( const TNS__GetGoodFriday& parameters );
    /**
        Blocking call to GetEaster.
        Not recommended in a GUI thread.
     */
    TNS__GetEasterResponse getEaster( const TNS__GetEaster& parameters );
    /**
        Asynchronous call to GetEaster.
        Remember to connect to getEasterDone and getEasterError.
     */
    void asyncGetEaster( const TNS__GetEaster& parameters );
    /**
        Blocking call to GetSaintPatricksDay.
        Not recommended in a GUI thread.
     */
    TNS__GetSaintPatricksDayResponse getSaintPatricksDay( const TNS__GetSaintPatricksDay& parameters );
    /**
        Asynchronous call to GetSaintPatricksDay.
        Remember to connect to getSaintPatricksDayDone and
        getSaintPatricksDayError.
     */
    void asyncGetSaintPatricksDay( const TNS__GetSaintPatricksDay& parameters );
    /**
        Blocking call to GetAprilFoolsDay.
        Not recommended in a GUI thread.
     */
    TNS__GetAprilFoolsDayResponse getAprilFoolsDay( const TNS__GetAprilFoolsDay& parameters );
    /**
        Asynchronous call to GetAprilFoolsDay.
        Remember to connect to getAprilFoolsDayDone and getAprilFoolsDayError.
     */
    void asyncGetAprilFoolsDay( const TNS__GetAprilFoolsDay& parameters );
    /**
        Blocking call to GetMothersDay.
        Not recommended in a GUI thread.
     */
    TNS__GetMothersDayResponse getMothersDay( const TNS__GetMothersDay& parameters );
    /**
        Asynchronous call to GetMothersDay.
        Remember to connect to getMothersDayDone and getMothersDayError.
     */
    void asyncGetMothersDay( const TNS__GetMothersDay& parameters );
    /**
        Blocking call to GetMemorialDay.
        Not recommended in a GUI thread.
     */
    TNS__GetMemorialDayResponse getMemorialDay( const TNS__GetMemorialDay& parameters );
    /**
        Asynchronous call to GetMemorialDay.
        Remember to connect to getMemorialDayDone and getMemorialDayError.
     */
    void asyncGetMemorialDay( const TNS__GetMemorialDay& parameters );
    /**
        Blocking call to GetCincoDeMayo.
        Not recommended in a GUI thread.
     */
    TNS__GetCincoDeMayoResponse getCincoDeMayo( const TNS__GetCincoDeMayo& parameters );
    /**
        Asynchronous call to GetCincoDeMayo.
        Remember to connect to getCincoDeMayoDone and getCincoDeMayoError.
     */
    void asyncGetCincoDeMayo( const TNS__GetCincoDeMayo& parameters );
    /**
        Blocking call to GetFathersDay.
        Not recommended in a GUI thread.
     */
    TNS__GetFathersDayResponse getFathersDay( const TNS__GetFathersDay& parameters );
    /**
        Asynchronous call to GetFathersDay.
        Remember to connect to getFathersDayDone and getFathersDayError.
     */
    void asyncGetFathersDay( const TNS__GetFathersDay& parameters );
    /**
        Blocking call to GetFlagDay.
        Not recommended in a GUI thread.
     */
    TNS__GetFlagDayResponse getFlagDay( const TNS__GetFlagDay& parameters );
    /**
        Asynchronous call to GetFlagDay.
        Remember to connect to getFlagDayDone and getFlagDayError.
     */
    void asyncGetFlagDay( const TNS__GetFlagDay& parameters );
    /**
        Blocking call to GetIndependenceDay.
        Not recommended in a GUI thread.
     */
    TNS__GetIndependenceDayResponse getIndependenceDay( const TNS__GetIndependenceDay& parameters );
    /**
        Asynchronous call to GetIndependenceDay.
        Remember to connect to getIndependenceDayDone and
        getIndependenceDayError.
     */
    void asyncGetIndependenceDay( const TNS__GetIndependenceDay& parameters );
    /**
        Blocking call to GetLaborDay.
        Not recommended in a GUI thread.
     */
    TNS__GetLaborDayResponse getLaborDay( const TNS__GetLaborDay& parameters );
    /**
        Asynchronous call to GetLaborDay.
        Remember to connect to getLaborDayDone and getLaborDayError.
     */
    void asyncGetLaborDay( const TNS__GetLaborDay& parameters );
    /**
        Blocking call to GetColumbusDay.
        Not recommended in a GUI thread.
     */
    TNS__GetColumbusDayResponse getColumbusDay( const TNS__GetColumbusDay& parameters );
    /**
        Asynchronous call to GetColumbusDay.
        Remember to connect to getColumbusDayDone and getColumbusDayError.
     */
    void asyncGetColumbusDay( const TNS__GetColumbusDay& parameters );
    /**
        Blocking call to GetHalloweenDay.
        Not recommended in a GUI thread.
     */
    TNS__GetHalloweenDayResponse getHalloweenDay( const TNS__GetHalloweenDay& parameters );
    /**
        Asynchronous call to GetHalloweenDay.
        Remember to connect to getHalloweenDayDone and getHalloweenDayError.
     */
    void asyncGetHalloweenDay( const TNS__GetHalloweenDay& parameters );
    /**
        Blocking call to GetThanksgivingDay.
        Not recommended in a GUI thread.
     */
    TNS__GetThanksgivingDayResponse getThanksgivingDay( const TNS__GetThanksgivingDay& parameters );
    /**
        Asynchronous call to GetThanksgivingDay.
        Remember to connect to getThanksgivingDayDone and
        getThanksgivingDayError.
     */
    void asyncGetThanksgivingDay( const TNS__GetThanksgivingDay& parameters );
    /**
        Blocking call to GetBlackFriday.
        Not recommended in a GUI thread.
     */
    TNS__GetBlackFridayResponse getBlackFriday( const TNS__GetBlackFriday& parameters );
    /**
        Asynchronous call to GetBlackFriday.
        Remember to connect to getBlackFridayDone and getBlackFridayError.
     */
    void asyncGetBlackFriday( const TNS__GetBlackFriday& parameters );
    /**
        Blocking call to GetVeteransDay.
        Not recommended in a GUI thread.
     */
    TNS__GetVeteransDayResponse getVeteransDay( const TNS__GetVeteransDay& parameters );
    /**
        Asynchronous call to GetVeteransDay.
        Remember to connect to getVeteransDayDone and getVeteransDayError.
     */
    void asyncGetVeteransDay( const TNS__GetVeteransDay& parameters );
    /**
        Blocking call to GetChristmasDay.
        Not recommended in a GUI thread.
     */
    TNS__GetChristmasDayResponse getChristmasDay( const TNS__GetChristmasDay& parameters );
    /**
        Asynchronous call to GetChristmasDay.
        Remember to connect to getChristmasDayDone and getChristmasDayError.
     */
    void asyncGetChristmasDay( const TNS__GetChristmasDay& parameters );
    /**
        Blocking call to GetNewYearsEve.
        Not recommended in a GUI thread.
     */
    TNS__GetNewYearsEveResponse getNewYearsEve( const TNS__GetNewYearsEve& parameters );
    /**
        Asynchronous call to GetNewYearsEve.
        Remember to connect to getNewYearsEveDone and getNewYearsEveError.
     */
    void asyncGetNewYearsEve( const TNS__GetNewYearsEve& parameters );

signals:
    /**
        This signal is emitted whenever the call to getNewYear() succeeded.
     */
    void getNewYearDone( const TNS__GetNewYearResponse& parameters );
    /**
        This signal is emitted whenever the call to getNewYear() failed.
     */
    void getNewYearError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getMartinLutherKingDay()
        succeeded.
     */
    void getMartinLutherKingDayDone( const TNS__GetMartinLutherKingDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getMartinLutherKingDay()
        failed.
     */
    void getMartinLutherKingDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getPresidentsDay()
        succeeded.
     */
    void getPresidentsDayDone( const TNS__GetPresidentsDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getPresidentsDay() failed.
     */
    void getPresidentsDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to
        getAbrahamLincolnsBirthday() succeeded.
     */
    void getAbrahamLincolnsBirthdayDone( const TNS__GetAbrahamLincolnsBirthdayResponse& parameters );
    /**
        This signal is emitted whenever the call to
        getAbrahamLincolnsBirthday() failed.
     */
    void getAbrahamLincolnsBirthdayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getValentinesDay()
        succeeded.
     */
    void getValentinesDayDone( const TNS__GetValentinesDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getValentinesDay() failed.
     */
    void getValentinesDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to
        getGeorgeWashingtonsBirthday() succeeded.
     */
    void getGeorgeWashingtonsBirthdayDone( const TNS__GetGeorgeWashingtonsBirthdayResponse& parameters );
    /**
        This signal is emitted whenever the call to
        getGeorgeWashingtonsBirthday() failed.
     */
    void getGeorgeWashingtonsBirthdayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getGoodFriday() succeeded.
     */
    void getGoodFridayDone( const TNS__GetGoodFridayResponse& parameters );
    /**
        This signal is emitted whenever the call to getGoodFriday() failed.
     */
    void getGoodFridayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getEaster() succeeded.
     */
    void getEasterDone( const TNS__GetEasterResponse& parameters );
    /**
        This signal is emitted whenever the call to getEaster() failed.
     */
    void getEasterError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getSaintPatricksDay()
        succeeded.
     */
    void getSaintPatricksDayDone( const TNS__GetSaintPatricksDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getSaintPatricksDay()
        failed.
     */
    void getSaintPatricksDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getAprilFoolsDay()
        succeeded.
     */
    void getAprilFoolsDayDone( const TNS__GetAprilFoolsDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getAprilFoolsDay() failed.
     */
    void getAprilFoolsDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getMothersDay() succeeded.
     */
    void getMothersDayDone( const TNS__GetMothersDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getMothersDay() failed.
     */
    void getMothersDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getMemorialDay() succeeded.
     */
    void getMemorialDayDone( const TNS__GetMemorialDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getMemorialDay() failed.
     */
    void getMemorialDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getCincoDeMayo() succeeded.
     */
    void getCincoDeMayoDone( const TNS__GetCincoDeMayoResponse& parameters );
    /**
        This signal is emitted whenever the call to getCincoDeMayo() failed.
     */
    void getCincoDeMayoError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getFathersDay() succeeded.
     */
    void getFathersDayDone( const TNS__GetFathersDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getFathersDay() failed.
     */
    void getFathersDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getFlagDay() succeeded.
     */
    void getFlagDayDone( const TNS__GetFlagDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getFlagDay() failed.
     */
    void getFlagDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getIndependenceDay()
        succeeded.
     */
    void getIndependenceDayDone( const TNS__GetIndependenceDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getIndependenceDay()
        failed.
     */
    void getIndependenceDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getLaborDay() succeeded.
     */
    void getLaborDayDone( const TNS__GetLaborDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getLaborDay() failed.
     */
    void getLaborDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getColumbusDay() succeeded.
     */
    void getColumbusDayDone( const TNS__GetColumbusDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getColumbusDay() failed.
     */
    void getColumbusDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getHalloweenDay()
        succeeded.
     */
    void getHalloweenDayDone( const TNS__GetHalloweenDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getHalloweenDay() failed.
     */
    void getHalloweenDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getThanksgivingDay()
        succeeded.
     */
    void getThanksgivingDayDone( const TNS__GetThanksgivingDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getThanksgivingDay()
        failed.
     */
    void getThanksgivingDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getBlackFriday() succeeded.
     */
    void getBlackFridayDone( const TNS__GetBlackFridayResponse& parameters );
    /**
        This signal is emitted whenever the call to getBlackFriday() failed.
     */
    void getBlackFridayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getVeteransDay() succeeded.
     */
    void getVeteransDayDone( const TNS__GetVeteransDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getVeteransDay() failed.
     */
    void getVeteransDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getChristmasDay()
        succeeded.
     */
    void getChristmasDayDone( const TNS__GetChristmasDayResponse& parameters );
    /**
        This signal is emitted whenever the call to getChristmasDay() failed.
     */
    void getChristmasDayError( const KDSoapMessage& fault );
    /**
        This signal is emitted whenever the call to getNewYearsEve() succeeded.
     */
    void getNewYearsEveDone( const TNS__GetNewYearsEveResponse& parameters );
    /**
        This signal is emitted whenever the call to getNewYearsEve() failed.
     */
    void getNewYearsEveError( const KDSoapMessage& fault );

private:
    KDSoapClientInterface *clientInterface();

private slots:
    void _kd_slotGetNewYearFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetMartinLutherKingDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetPresidentsDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetAbrahamLincolnsBirthdayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetValentinesDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetGeorgeWashingtonsBirthdayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetGoodFridayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetEasterFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetSaintPatricksDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetAprilFoolsDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetMothersDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetMemorialDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetCincoDeMayoFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetFathersDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetFlagDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetIndependenceDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetLaborDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetColumbusDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetHalloweenDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetThanksgivingDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetBlackFridayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetVeteransDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetChristmasDayFinished( KDSoapPendingCallWatcher* watcher );
    void _kd_slotGetNewYearsEveFinished( KDSoapPendingCallWatcher* watcher );

private:
    class PrivateDPtr;
    PrivateDPtr *d_ptr;
};

#endif
